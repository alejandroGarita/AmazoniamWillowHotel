//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AmazoniamWillowHotel.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Hotel_Amazonian_WillowEntities : DbContext
    {
        public Hotel_Amazonian_WillowEntities()
            : base("name=Hotel_Amazonian_WillowEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Administrador> Administrador { get; set; }
        public virtual DbSet<Caracteristica> Caracteristica { get; set; }
        public virtual DbSet<Estado> Estado { get; set; }
        public virtual DbSet<Habitacion> Habitacion { get; set; }
        public virtual DbSet<Imagen> Imagen { get; set; }
        public virtual DbSet<Info> Info { get; set; }
        public virtual DbSet<Pagina> Pagina { get; set; }
        public virtual DbSet<Promocion> Promocion { get; set; }
        public virtual DbSet<Publicidad> Publicidad { get; set; }
        public virtual DbSet<Reservacion> Reservacion { get; set; }
        public virtual DbSet<Tipo_Habitacion> Tipo_Habitacion { get; set; }
    
        public virtual ObjectResult<sp_ConsultarDisponibilidad_Result> sp_ConsultarDisponibilidad(Nullable<int> idTipoHabitacion, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var idTipoHabitacionParameter = idTipoHabitacion.HasValue ?
                new ObjectParameter("idTipoHabitacion", idTipoHabitacion) :
                new ObjectParameter("idTipoHabitacion", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ConsultarDisponibilidad_Result>("sp_ConsultarDisponibilidad", idTipoHabitacionParameter, fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual int sp_InsertarImagen(byte[] imagen)
        {
            var imagenParameter = imagen != null ?
                new ObjectParameter("imagen", imagen) :
                new ObjectParameter("imagen", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertarImagen", imagenParameter);
        }
    }
}
